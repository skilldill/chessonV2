#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å –ø–æ–º–æ—â—å—é: node test-random-colors.js
 */

console.log("üé≤ –¢–µ—Å—Ç —Å–ª—É—á–∞–π–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤...\n");

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ (–∫–∞–∫ –≤ API)
function assignRandomColor() {
  const colors = ["white", "black"];
  return colors[Math.floor(Math.random() * colors.length)];
}

// –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ü–≤–µ—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–ª—É—á–∞–π–Ω—ã–µ
console.log("1Ô∏è‚É£ –¢–µ—Å—Ç —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤:");
const testResults = {
  white: 0,
  black: 0
};

const testCount = 1000;
for (let i = 0; i < testCount; i++) {
  const color = assignRandomColor();
  testResults[color]++;
}

console.log(`‚úÖ –ü—Ä–æ–≤–µ–¥–µ–Ω–æ ${testCount} —Ç–µ—Å—Ç–æ–≤:`);
console.log(`   –ë–µ–ª—ã–π: ${testResults.white} —Ä–∞–∑ (${(testResults.white/testCount*100).toFixed(1)}%)`);
console.log(`   –ß–µ—Ä–Ω—ã–π: ${testResults.black} —Ä–∞–∑ (${(testResults.black/testCount*100).toFixed(1)}%)`);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–Ω–æ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ (–¥–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –≤ 10%)
const expectedCount = testCount / 2;
const tolerance = testCount * 0.1;

if (Math.abs(testResults.white - expectedCount) <= tolerance && 
    Math.abs(testResults.black - expectedCount) <= tolerance) {
  console.log("‚úÖ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ!");
} else {
  console.log("‚ö†Ô∏è  –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω—ã–º");
}

// –¢–µ—Å—Ç 2: –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–≤—É—Ö –∏–≥—Ä–æ–∫–æ–≤
console.log("\n2Ô∏è‚É£ –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–≤—É—Ö –∏–≥—Ä–æ–∫–æ–≤:");
const simulations = 10;

for (let sim = 1; sim <= simulations; sim++) {
  const player1Color = assignRandomColor();
  const player2Color = player1Color === "white" ? "black" : "white";
  
  console.log(`   –°–∏–º—É–ª—è—Ü–∏—è ${sim}: –ò–≥—Ä–æ–∫ 1 = ${player1Color}, –ò–≥—Ä–æ–∫ 2 = ${player2Color}`);
}

// –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ —Ü–≤–µ—Ç–æ–≤ –≤ –∫–æ–º–Ω–∞—Ç–µ
console.log("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ —Ü–≤–µ—Ç–æ–≤ –≤ –∫–æ–º–Ω–∞—Ç–µ:");
const room = {
  users: new Map(),
  gameState: {
    currentFEN: "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1",
    moveHistory: [],
    currentPlayer: "white",
    gameStarted: false
  }
};

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
const userId1 = "player1";
const color1 = assignRandomColor();
room.users.set(userId1, {
  userName: "Player1",
  color: color1,
  isConnected: true
});

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞ —Å –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–º —Ü–≤–µ—Ç–æ–º
const userId2 = "player2";
const color2 = color1 === "white" ? "black" : "white";
room.users.set(userId2, {
  userName: "Player2",
  color: color2,
  isConnected: true
});

console.log(`‚úÖ –ò–≥—Ä–æ–∫ 1 –ø–æ–ª—É—á–∏–ª: ${color1}`);
console.log(`‚úÖ –ò–≥—Ä–æ–∫ 2 –ø–æ–ª—É—á–∏–ª: ${color2}`);
console.log(`‚úÖ –¶–≤–µ—Ç–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã: ${color1 !== color2 ? "–î–∞" : "–ù–µ—Ç"}`);

// –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
console.log("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã:");
room.gameState.gameStarted = true;

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫—Ç–æ —Ö–æ–¥–∏—Ç –ø–µ—Ä–≤—ã–º (–±–µ–ª—ã–µ –≤—Å–µ–≥–¥–∞ —Ö–æ–¥—è—Ç –ø–µ—Ä–≤—ã–º–∏)
const firstPlayer = color1 === "white" ? "Player1" : "Player2";
console.log(`‚úÖ –ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!`);
console.log(`‚úÖ –ü–µ—Ä–≤—ã–π —Ö–æ–¥ –¥–µ–ª–∞–µ—Ç: ${firstPlayer} (${room.gameState.currentPlayer})`);

console.log("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã —Å–ª—É—á–∞–π–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω—ã!");
console.log("\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:");
console.log("‚úÖ –¶–≤–µ—Ç–∞ –Ω–∞–∑–Ω–∞—á–∞—é—Ç—Å—è —Å–ª—É—á–∞–π–Ω–æ");
console.log("‚úÖ –ö–∞–∂–¥—ã–π –∏–≥—Ä–æ–∫ –ø–æ–ª—É—á–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ü–≤–µ—Ç");
console.log("‚úÖ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–Ω–æ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ");
console.log("‚úÖ –ë–µ–ª—ã–µ –≤—Å–µ–≥–¥–∞ —Ö–æ–¥—è—Ç –ø–µ—Ä–≤—ã–º–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –ø–æ—Ä—è–¥–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è");
