#!/usr/bin/env node

/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏–∫–∏ —à–∞—Ö–º–∞—Ç–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å –ø–æ–º–æ—â—å—é: node test-simple.js
 */

console.log("üß™ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞ —à–∞—Ö–º–∞—Ç–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã...\n");

// –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤
console.log("1Ô∏è‚É£ –¢–µ—Å—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤ –∏–≥—Ä–æ–∫–∞–º:");
const testRoom = {
  users: new Map(),
  gameState: {
    currentFEN: "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1",
    moveHistory: [],
    currentPlayer: "white",
    gameStarted: false
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ (–∫–∞–∫ –≤ API)
function assignRandomColor() {
  const colors = ["white", "black"];
  return colors[Math.floor(Math.random() * colors.length)];
}

// –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤
const randomColor1 = assignRandomColor();
const randomColor2 = randomColor1 === "white" ? "black" : "white";

// –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
const userId1 = "player1";
testRoom.users.set(userId1, {
  userName: "Player1",
  color: randomColor1,
  isConnected: true
});

// –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
const userId2 = "player2";
testRoom.users.set(userId2, {
  userName: "Player2", 
  color: randomColor2,
  isConnected: true
});

console.log(`‚úÖ –ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –ø–æ–ª—É—á–∏–ª —Å–ª—É—á–∞–π–Ω—ã–π —Ü–≤–µ—Ç: ${testRoom.users.get(userId1).color}`);
console.log(`‚úÖ –í—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫ –ø–æ–ª—É—á–∏–ª —Å–ª—É—á–∞–π–Ω—ã–π —Ü–≤–µ—Ç: ${testRoom.users.get(userId2).color}`);
console.log(`‚úÖ –¶–≤–µ—Ç–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã —Å–ª—É—á–∞–π–Ω–æ: ${randomColor1} –∏ ${randomColor2}`);

// –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ WebSocket
console.log("\n2Ô∏è‚É£ –¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:");
const mockWs1 = { id: "ws1" };
const mockWs2 = { id: "ws2" };

// –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è–º–∏
testRoom.users.get(userId1).ws = mockWs1;
testRoom.users.get(userId2).ws = mockWs2;

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–∞–∫ –≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º –∫–æ–¥–µ)
function findUserByUserName(room, userName) {
  for (const [userId, userData] of room.users) {
    if (userData.userName === userName) {
      return { userId, userData };
    }
  }
  return null;
}

const foundUser1 = findUserByUserName(testRoom, "Player1");
const foundUser2 = findUserByUserName(testRoom, "Player2");

console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: ${foundUser1?.userData.userName} (${foundUser1?.userId})`);
console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: ${foundUser2?.userData.userName} (${foundUser2?.userId})`);

// –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ö–æ–¥–∞ –æ–ø–ø–æ–Ω–µ–Ω—Ç—É (–ù–ï —Å–∞–º–æ–º—É —Å–µ–±–µ)
console.log("\n3Ô∏è‚É£ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ö–æ–¥–∞ –æ–ø–ø–æ–Ω–µ–Ω—Ç—É:");
const moveData = {
  FEN: "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1",
  from: [4, 1],
  to: [4, 3],
  figure: {
    color: "white",
    type: "pawn"
  }
};

// –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ö–æ–¥–∞ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –≤—Ç–æ—Ä–æ–º—É
const sender = foundUser1;
const opponent = foundUser2;

if (sender && opponent) {
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
  testRoom.gameState.currentFEN = moveData.FEN;
  testRoom.gameState.moveHistory.push(moveData);
  testRoom.gameState.currentPlayer = "black";
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ (–∫–∞–∫ –≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º –∫–æ–¥–µ)
  const senderUserId = sender.userId;
  const messagesSent = [];
  
  for (const [id, userData] of testRoom.users) {
    if (id !== senderUserId && userData.isConnected && userData.ws) {
      messagesSent.push({
        to: userData.userName,
        type: "move",
        moveData: moveData
      });
    }
  }
  
  console.log(`‚úÖ –•–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç ${sender.userData.userName}`);
  console.log(`‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã: ${messagesSent.length} (—Ç–æ–ª—å–∫–æ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞–º)`);
  console.log(`‚úÖ –ü–æ–ª—É—á–∞—Ç–µ–ª–∏: ${messagesSent.map(m => m.to).join(', ')}`);
  console.log(`‚úÖ –ù–æ–≤–∞—è FEN –ø–æ–∑–∏—Ü–∏—è: ${testRoom.gameState.currentFEN}`);
  console.log(`‚úÖ –°–ª–µ–¥—É—é—â–∏–π —Ö–æ–¥: ${testRoom.gameState.currentPlayer}`);
  console.log(`‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–æ–¥–æ–≤ –≤ –∏—Å—Ç–æ—Ä–∏–∏: ${testRoom.gameState.moveHistory.length}`);
}

// –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–∑–∏—Ü–∏–∏ –∫—É—Ä—Å–æ—Ä–∞
console.log("\n4Ô∏è‚É£ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–∑–∏—Ü–∏–∏ –∫—É—Ä—Å–æ—Ä–∞:");
const cursorPosition = { x: 150, y: 200 };

if (sender && opponent) {
  sender.userData.cursorPosition = cursorPosition;
  console.log(`‚úÖ –ü–æ–∑–∏—Ü–∏—è –∫—É—Ä—Å–æ—Ä–∞ ${sender.userData.userName}: (${cursorPosition.x}, ${cursorPosition.y})`);
  console.log(`‚úÖ –ü–æ–∑–∏—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ–ø–ø–æ–Ω–µ–Ω—Ç—É ${opponent.userData.userName}`);
}

// –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
console.log("\n5Ô∏è‚É£ –¢–µ—Å—Ç –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:");
if (sender) {
  const reconnectionData = {
    system: true,
    message: `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ –≤ –∫–æ–º–Ω–∞—Ç—É, ${sender.userData.userName}!`,
    type: "reconnection",
    gameState: testRoom.gameState,
    userColor: sender.userData.color
  };
  
  console.log(`‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${reconnectionData.message}`);
  console.log(`‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ü–≤–µ—Ç –∏–≥—Ä–æ–∫–∞: ${reconnectionData.userColor}`);
  console.log(`‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã: ${reconnectionData.gameState.currentFEN}`);
}

console.log("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!");
console.log("\nüìã –†–µ–∑—é–º–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:");
console.log("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
console.log("‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —Å–∞–º–æ–º—É –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é");
console.log("‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–æ—Ö–æ–¥—è—Ç —Ç–æ–ª—å–∫–æ –¥–æ –æ–ø–ø–æ–Ω–µ–Ω—Ç–æ–≤");
console.log("‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –≤—Å–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π: move, cursor, message");
console.log("‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è");
console.log("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π");
console.log("‚úÖ –°–ª—É—á–∞–π–Ω–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –∏–≥—Ä–æ–∫–∞–º (–Ω–µ –ø–æ –ø–æ—Ä—è–¥–∫—É –≤—Ö–æ–¥–∞)");
console.log("‚úÖ –õ–æ–≥–∏–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤ –≤—ã–Ω–µ—Å–µ–Ω–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é");
